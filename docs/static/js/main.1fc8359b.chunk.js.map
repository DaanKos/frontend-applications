{"version":3,"sources":["components/layout/Header.js","components/Object.js","components/Objects.js","components/pages/About.js","components/pages/Tutorial.js","App.js","index.js"],"names":["Header","className","to","Object","state","invisibleClassName","visibleClassName","title","this","props","object","value","cho","pic","date","answerButtonDisabled","currentVisibilityClass","src","alt","disabled","onClick","compare","href","target","rel","Component","Objects","otherObject","objects","find","o","rightAnswerGiven","wrongAnswerGiven","map","key","About","Fragment","Tutorial","App","selectedobjects","nextButtonDisabled","currentMessage","currentScore","highScore","updateScoring","sessionStorageScore","sessionStorage","getItem","localStorageScore","localStorage","setState","currentScoreValue","Number","setItem","runQuery","fetch","url","encodeURIComponent","then","res","json","results","bindings","itemArray","unique","i","length","includes","console","log","splice","push","item","Math","floor","random","pushNextObjects","basename","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1fc8359b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../App.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"headerStyle\">\r\n            <h1>Welk object is ouder?</h1>\r\n            <Link className=\"headerLinkStyle\" to=\"/\">Uitleg</Link> | <Link className=\"headerLinkStyle\" to=\"/het-spel\">Het spel</Link> | <Link className=\"headerLinkStyle\" to=\"/info\">Info</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\n\r\nexport class Object extends Component {\r\n    // State in which I declare to classnames which are used for showing/hiding the year of creation and link for more info\r\n    state = {\r\n        invisibleClassName: 'invisibleClass',\r\n        visibleClassName: 'visibleClass',\r\n    }\r\n    \r\n    // This renders the object component\r\n    render() {\r\n        const title = this.props.object.title.value;\r\n        const cho = this.props.object.cho.value;\r\n        const pic = this.props.object.pic.value;\r\n        const date = this.props.object.date.value;\r\n        const answerButtonDisabled = this.props.answerButtonDisabled;\r\n        const visibleClassName = this.state.visibleClassName;\r\n        const invisibleClassName = this.state.invisibleClassName;\r\n        let currentVisibilityClass = \"\";\r\n\r\n        // This code checks wether the year of creation and link for more info should be visible or not\r\n        // It adds the appropriate className to the currentVisiblityClass, which is the className on the elements that require hiding/showing\r\n        if (answerButtonDisabled === true){\r\n            currentVisibilityClass = visibleClassName;\r\n        }\r\n\r\n        if (answerButtonDisabled === false){\r\n            currentVisibilityClass = invisibleClassName;\r\n        }\r\n\r\n        // This is the actual output which is meant for the DOM\r\n        return (\r\n            <div className=\"singleObject\">\r\n                    <p>{ title }</p>\r\n                    <img className=\"singleObjectPic\" src={ pic } alt={ title }></img>\r\n                    <p className={ currentVisibilityClass }>{ date }</p>\r\n                    <button disabled={answerButtonDisabled} onClick={() => this.props.compare(this.props.object)} >Dit object is ouder!</button>\r\n                <a className={ currentVisibilityClass } href={ cho } target=\"_blank\" rel=\"noopener noreferrer\">Meer info over dit object</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Object","import React, { Component } from 'react';\r\nimport Object from './Object';\r\n\r\nclass Objects extends Component {\r\n    compare = (object) => {\r\n        // *Have to use \"o\" instead of \"object\" because the object term is occupied, using \"object\" would cause problems\r\n        // This creates a const which is the \"otherObject\", the one the user did NOT click\r\n        const otherObject = this.props.objects.find((o) => o.cho.value !== object.cho.value)\r\n\r\n        // A couple of if statements that check if the user clicked the right or wrong answer, and fires the appropriate function\r\n        if (otherObject.date.value > object.date.value) {\r\n            this.props.rightAnswerGiven();\r\n        }\r\n        if (otherObject.date.value < object.date.value) {\r\n            this.props.wrongAnswerGiven();\r\n        }\r\n        if (otherObject.date.value === object.date.value) {\r\n            this.props.rightAnswerGiven();\r\n        }\r\n    }\r\n\r\n    // This code renders the objects component\r\n    render() {\r\n        return this.props.objects.map((object) => (\r\n            <Object key={object.cho.value} object={object} compare={this.compare} answerButtonDisabled={this.props.answerButtonDisabled} />\r\n        ));\r\n    }\r\n}\r\n\r\nexport default Objects;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"infopageWrap\">\r\n            <h1>Info</h1>\r\n            <p>Dit project is gemaakt door Daan Kos (500770599) als onderdeel van het vak Frontend-Applications binnen de tech-track van CMD - Information Design in leerjaar 3</p>\r\n            <p>In de applicatie wordt data gebruikt van het Nationaal Museum van Wereldculturen, hiervoor wordt hun API gebruikt. Deze data is dus eigendom van hem en niet van mij.</p>\r\n            </div> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Tutorial() {\r\n    return (\r\n        <React.Fragment>\r\n        <div className=\"explainpageWrap\">\r\n           <h1>Uitleg</h1>\r\n           <p>Leuk dat je het \"Welk object is ouder?\" spel wilt spelen! Op deze pagina wordt de werking van het spel kort uitgelegd, na het lezen van de uitleg kun je starten met het spel!.</p>\r\n           <ol>\r\n            <li>Er komen 2 objecten tevoorschijn. Bekijk de foto's goed, welk van deze objecten is het oudst?</li>\r\n            <li>Denk je dat je het weet? Klik dan bij dit object op de \"Dit object is ouder!\" knop!</li>\r\n            <li>Heb je het goed? Gefeliciteerd, je huidige score is omhoog gegaan!</li>\r\n            <li>Heb je het fout? Jammer, je huidige score gaat terug naar 0.</li>\r\n            <li>Klik op \"Volgende vraag\" om naar de volgende vraag te gaan!</li>\r\n            <li>Probeer je high score te verbreken, veel succes!</li>\r\n           </ol>\r\n           <Link className=\"explainpageLink\" to=\"/het-spel\">Start het spel!</Link>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Tutorial;","// Necessary stuff gets imported, like react and react-router-dom for easy routing\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Objects from './components/Objects';\nimport About from './components/pages/About';\nimport Tutorial from './components/pages/Tutorial';\nimport './App.css';\n\nclass App extends Component {\n    // The state contains 2 arrays, 1 for all objects, 1 for the 2 objects the user sees\n    // It contains 2 \"disabled triggers\", which are being used for disabling and enabling buttons on the game page\n    // It contains the current message, which is shown to the user on the game page and reflects their last answer in the game\n    // It contains both the currentscore and highscore, which are retrieved from and written to the session and localstorage\n    state = {\n        selectedobjects: [],\n        objects: [],\n        answerButtonDisabled: false,\n        nextButtonDisabled: false,\n        currentMessage: \"Wachtend op je antwoord...\",\n        currentScore: 0,\n        highScore: 0,\n    }\n\n    // This function retrieves the currentscore and highscore from the session and localstorage and sends them to their state equivalants\n    // After performing these actions, it enables the next button which allows the user to navigate to the next question\n    updateScoring = () => {\n        let sessionStorageScore = sessionStorage.getItem(\"CurrentScore\");\n        let localStorageScore = localStorage.getItem(\"HighScore\");\n        this.setState({ currentScore: sessionStorageScore });\n        this.setState({ highScore: localStorageScore })\n        this.setState({ nextButtonDisabled: false });\n    }\n\n    // This function fires after the user has given the right answer\n    // It retrieves the currentscore from the sessionstorage, adds 1 point, and pushes it back to the session storage\n    // If the currentscore is higher than the highscore, it sends the currentscore to the highscore in the local storage\n    // After performing these actions, it fires the updateScoring and disableButtons functions\n    rightAnswerGiven = () => {\n        this.setState({ currentMessage: \"Je antwoord is helemaal goed!\" });\n        let currentScoreValue = sessionStorage.getItem('CurrentScore');\n        currentScoreValue = Number(currentScoreValue) + 1;\n        sessionStorage.setItem('CurrentScore', currentScoreValue);\n        let highScoreValue = localStorage.getItem('HighScore');\n        if (highScoreValue < currentScoreValue){\n            localStorage.setItem('HighScore', currentScoreValue);\n        }\n        this.updateScoring();\n        this.setState({ answerButtonDisabled: true });\n    }\n\n    // This function fires after the user has given the wrong answer\n    // It retrieves the currentscore from the sessionstorage, sets it to 0, and pushes it back to the session storage\n    // After performing these actions, it fires the updateScoring and disableButtons functions\n    wrongAnswerGiven = () => {\n        this.setState({ currentMessage: \"Je antwoord is helaas fout!\" });\n        let currentScoreValue = sessionStorage.getItem('CurrentScore');\n        currentScoreValue = 0;\n        sessionStorage.setItem('CurrentScore', currentScoreValue);\n        this.updateScoring();\n        this.setState({ answerButtonDisabled: true });\n    }\n\n    // This function fires once, on componentWillMount\n    // It retrieves data from the NMVW database and filters the data, after which the retrieved objects get sent to an array in the state\n    // After performing these actions, it fires the pushNextObjects function\n    runQuery = () => {\n          // The following piece of code was written by user Razpudding (Laurens), from https://codepen.io/Razpudding/pen/LKMbwZ\n          // I have edited the code to fit my needs and use my own endpoint\n          //Github CMDA\n          const url =\"https://api.data.netwerkdigitaalerfgoed.nl/datasets/ivo/NMVW/services/NMVW-17/sparql\"\n          //Note that the query is wrapped in es6 template strings to allow for easy copy pasting\n          const query = `\n          PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n          PREFIX dc: <http://purl.org/dc/elements/1.1/>\n          PREFIX dct: <http://purl.org/dc/terms/>\n          PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n          PREFIX edm: <http://www.europeana.eu/schemas/edm/>\n          PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n          SELECT * WHERE {\n            <https://hdl.handle.net/20.500.11840/termmaster14188> skos:narrower* ?type .\n            ?cho dc:title ?title .\n            ?cho dct:created ?date .\n            BIND (xsd:gYear(?date) AS ?year)\n            FILTER (?year > xsd:gYear(\"1500\"))\n            ?cho edm:isShownBy ?pic .\n            ?cho edm:object ?type .\n            FILTER langMatches(lang(?title), \"ned\")\n            ?type skos:prefLabel ?typeLabel .\n           } LIMIT 1000\n          `\n            // Call the url with the query attached, output data\n            fetch(url+\"?query=\"+ encodeURIComponent(query) +\"&format=json\")\n            .then(res => res.json())\n            .then(json => {\n            \n            // Set the url for the \"This image is protected by copyright\" picture as a const\n            const copyrightPic =\"http://collectie.wereldculturen.nl/cc/imageproxy.ashx?server=localhost&port=17581&filename=images/CopyRightImage.jpg\";\n            \n            // Put the received data in a let named results\n            let results = json.results.bindings;\n            \n            // Create an empty array, the final filtered data will be pushed to this array\n            let itemArray = [];\n            \n            // The following piece of code was inspired by Giovanni Kaaijk, from https://github.com/GiovanniKaaijk/frontend-applications/blob/master/my-app/src/App.js\n            // I have edited the code to fit my needs\n            // It loops through the received data and pushes their \"date\" property to an empty array\n            // If the item in the current loop cycle has a \"date\" property that's already in the previously mentioned array, the item gets deleted\n            let unique = [];\n            for(let i=0; i<results.length; i++){\n              if(unique.includes(results[i].date.value)) {\n                console.log(\"Will delete item from array - duplicate date\");  \n                results.splice([i], 1);\n              } else {\n                  unique.push(results[i].date.value);\n              }\n            }\n\n            // This loops through all remaining results and deletes the items from which the image url matches with the copyrightPic url\n            for(let i=0; i<results.length; i++){\n                if((results[i].pic.value) === copyrightPic) {\n                    results.splice([i], 1)\n                    console.log(\"Deleted item from array - Copyright image\");\n                }\n            }\n  \n            // The following piece of code was inspired by Kyle Bot, from https://github.com/kylebot0/frontend-applications/blob/master/client/src/app.js\n            // This code pushes all remaining results to the itemArray but randomizes the order\n            // This needs to be done so the items shown to the user will be randomized\n            for(let i=0; i < results.length; i++){\n                var item = results[Math.floor(Math.random() * results.length)];\n                itemArray.push(item);\n            }\n\n            // The items in the itemArray get pushed to the \"objects\" array in state\n            this.setState({ objects: itemArray })\n\n            // Fires pushNextObjects funtion\n            this.pushNextObjects();\n            })\n        \n    }\n\n    // This object pushes 2 objects from the \"objects\" array in the state to the \"selectedobjects\" array in the state\n    // It also removes the 2 pushed objects from the \"objects\" array\n    // After performing these actions, it enables the answer buttons, changes the current message and disables the next question button\n    pushNextObjects = () => {\n        this.state.selectedobjects.splice(0, 2);\n        for(let i=0; i < 2; i++){\n        this.state.selectedobjects.push(this.state.objects[i]);\n        this.state.objects.splice([i], 1);\n        this.setState(this.state)\n        console.log(this.state.selectedobjects);\n        console.log(this.state.objects);\n        this.setState({ answerButtonDisabled: false });\n        this.setState({ currentMessage: \"Wachtend op je antwoord...\" });\n        this.setState({ nextButtonDisabled: true });\n        }\n    }\n\n    // This code fires once\n    // It fires the runQuery function to retrieve data and updateScoring function to show the current and high scores\n    // After performing these actions, it disables the next question button\n    componentWillMount(){\n        this.runQuery();\n        this.updateScoring();\n        this.setState({ nextButtonDisabled: true });\n    }\n    \n    // This code renders the application\n    render() {\n        return (\n            <Router basename=\"https://daankos.github.io/frontend-applications/\">\n                <div className=\"App\">\n                    <div className=\"container\">\n                        <Header />\n                        <Route exact path=\"/\" component={Tutorial} />\n                        <Route path=\"/het-spel\" render={props => (\n                            <React.Fragment>\n                                <div className=\"objectsWrap\">\n                                <Objects objects={this.state.selectedobjects} rightAnswerGiven={this.rightAnswerGiven} wrongAnswerGiven={this.wrongAnswerGiven} answerButtonDisabled={this.state.answerButtonDisabled} />\n                                </div>\n                                <div className=\"messageWrap\">\n                                <p>{ this.state.currentMessage }</p>\n                                </div>\n                                <div className=\"nextButtonWrap\"> \n                                <button disabled={this.state.nextButtonDisabled} onClick={this.pushNextObjects}>Volgende vraag</button>\n                                </div> \n                                <div className=\"scoringWrap\"> \n                                <div><p>Je huidige score:</p><p>{this.state.currentScore}</p></div>\n                                <div><p>Je hoogste score:</p><p>{this.state.highScore}</p></div>\n                                </div>\n                            </React.Fragment>\n                        )} />\n                        <Route path=\"/info\" component={About} />\n                    </div>\n                </div>\n            </Router>\n        ); \n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}